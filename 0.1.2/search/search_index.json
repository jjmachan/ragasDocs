{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"this is home!","text":"<p>welcome to this page</p>"},{"location":"about/","title":"About","text":"<p>Ragas is a Python library for evaluating and improving your LLM applications.</p> <p>Ragas is designed to be simple to use, yet powerful. It provides a set of tools to evaluate and improve your LLM applications.</p> <p>Ragas is designed to be simple to use, yet powerful. It provides a set of tools to evaluate and improve your LLM applications.</p>"},{"location":"module/","title":"Hello Joel","text":"<p>this has been updated in latest version</p> In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\n\n# Generate some data\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\n# Create a linear plot\nplt.plot(x, y)\n\n# Add labels and title\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('Linear Plot')\n\n# Display the plot\nplt.show()\n</pre> import matplotlib.pyplot as plt  # Generate some data x = [1, 2, 3, 4, 5] y = [2, 4, 6, 8, 10]  # Create a linear plot plt.plot(x, y)  # Add labels and title plt.xlabel('X-axis') plt.ylabel('Y-axis') plt.title('Linear Plot')  # Display the plot plt.show() In\u00a0[\u00a0]: Copied! <pre>import matplotlib.pyplot as plt\n\n# Generate some data\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\n# Create a linear plot\nplt.plot(x, y)\n\n# Add labels and title\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.title('Linear Plot')\n\n# Display the plot\nplt.show()\n</pre> import matplotlib.pyplot as plt  # Generate some data x = [1, 2, 3, 4, 5] y = [2, 4, 6, 8, 10]  # Create a linear plot plt.plot(x, y)  # Add labels and title plt.xlabel('X-axis') plt.ylabel('Y-axis') plt.title('Linear Plot')  # Display the plot plt.show()"},{"location":"module/#hello-joel","title":"Hello Joel\u00b6","text":""},{"location":"module/#this-is-a-test-of-markdown-in-mkdocs","title":"This is a test of markdown in mkdocs\u00b6","text":""},{"location":"references/","title":"References","text":""},{"location":"references/#ragasdocs.module1.Class","title":"<code>Class</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a class in the school system.</p> <p>This class inherits from pydantic's BaseModel for data validation.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the class.</p> <code>teacher</code> <code>Teacher</code> <p>The teacher responsible for this class.</p> <code>class_code</code> <code>str</code> <p>A unique code identifying the class.</p> Note <p>The 'teacher' attribute is a forward reference to the Teacher class.</p> Source code in <code>ragasdocs/module1.py</code> <pre><code>class Class(BaseModel):\n    \"\"\"\n    Represents a class in the school system.\n\n    This class inherits from pydantic's BaseModel for data validation.\n\n    Attributes:\n        name (str): The name of the class.\n        teacher (Teacher): The teacher responsible for this class.\n        class_code (str): A unique code identifying the class.\n\n    Note:\n        The 'teacher' attribute is a forward reference to the Teacher class.\n    \"\"\"\n    name: str\n    teacher: \"Teacher\"\n    class_code: str\n</code></pre>"},{"location":"references/#ragasdocs.module1.School","title":"<code>School</code>  <code>dataclass</code>","text":"<p>Represents a school in the educational system.</p> <p>This class encapsulates the core components of a school, including its teachers, students, and classes.</p> <p>Attributes:</p> Name Type Description <code>teachers</code> <code>List[Teacher]</code> <p>A list of Teacher objects representing all teachers in the school.</p> <code>students</code> <code>List[Student]</code> <p>A list of Student objects representing all students enrolled in the school.</p> <code>classes</code> <code>List[Class]</code> <p>A list of Class objects representing all classes offered by the school.</p> Note <p>This class is implemented as a dataclass for automatic generation of  init, repr, and other special methods.</p> Source code in <code>ragasdocs/module1.py</code> <pre><code>@dataclass\nclass School:\n    \"\"\"\n    Represents a school in the educational system.\n\n    This class encapsulates the core components of a school, including its teachers,\n    students, and classes.\n\n    Attributes:\n        teachers (List[Teacher]): A list of Teacher objects representing all teachers in the school.\n        students (List[Student]): A list of Student objects representing all students enrolled in the school.\n        classes (List[Class]): A list of Class objects representing all classes offered by the school.\n\n    Note:\n        This class is implemented as a dataclass for automatic generation of \n        __init__, __repr__, and other special methods.\n    \"\"\"\n    teachers: t.List[Teacher]\n    students: t.List[Student]\n    classes: t.List[Class]\n\n    def get_classes_student_attends(self, student: Student):\n        \"\"\"\n        Return the classes a student attends.\n\n        Parameters\n        ----------\n        student : Student\n            The student object for whom to retrieve the classes.\n\n        Returns\n        -------\n        list of Class\n            A list of Class objects that the student attends.\n\n        Notes\n        -----\n        This method filters the school's classes based on the class codes\n        associated with the given student.\n        \"\"\"\n        return [c for c in self.classes if c.class_code in student.classes]\n</code></pre>"},{"location":"references/#ragasdocs.module1.School.get_classes_student_attends","title":"<code>get_classes_student_attends(student)</code>","text":"<p>Return the classes a student attends.</p>"},{"location":"references/#ragasdocs.module1.School.get_classes_student_attends--parameters","title":"Parameters","text":"<p>student : Student     The student object for whom to retrieve the classes.</p>"},{"location":"references/#ragasdocs.module1.School.get_classes_student_attends--returns","title":"Returns","text":"<p>list of Class     A list of Class objects that the student attends.</p>"},{"location":"references/#ragasdocs.module1.School.get_classes_student_attends--notes","title":"Notes","text":"<p>This method filters the school's classes based on the class codes associated with the given student.</p> Source code in <code>ragasdocs/module1.py</code> <pre><code>def get_classes_student_attends(self, student: Student):\n    \"\"\"\n    Return the classes a student attends.\n\n    Parameters\n    ----------\n    student : Student\n        The student object for whom to retrieve the classes.\n\n    Returns\n    -------\n    list of Class\n        A list of Class objects that the student attends.\n\n    Notes\n    -----\n    This method filters the school's classes based on the class codes\n    associated with the given student.\n    \"\"\"\n    return [c for c in self.classes if c.class_code in student.classes]\n</code></pre>"},{"location":"references/#ragasdocs.module1.Student","title":"<code>Student</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a student in the school system.</p> <p>This class inherits from pydantic's BaseModel for data validation.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the student.</p> <code>classes</code> <code>List[str]</code> <p>A list of class codes that the student is enrolled in.</p> <code>class_teacher</code> <code>Teacher</code> <p>The class teacher assigned to this student.</p> Note <p>The 'class_teacher' attribute is a forward reference to the Teacher class. The 'classes' attribute contains class codes rather than Class objects.</p> Source code in <code>ragasdocs/module1.py</code> <pre><code>class Student(BaseModel):\n    \"\"\"\n    Represents a student in the school system.\n\n    This class inherits from pydantic's BaseModel for data validation.\n\n    Attributes:\n        name (str): The name of the student.\n        classes (List[str]): A list of class codes that the student is enrolled in.\n        class_teacher (Teacher): The class teacher assigned to this student.\n\n    Note:\n        The 'class_teacher' attribute is a forward reference to the Teacher class.\n        The 'classes' attribute contains class codes rather than Class objects.\n    \"\"\"\n    name: str\n    classes: t.List[str]\n    class_teacher: \"Teacher\"\n</code></pre>"},{"location":"references/#ragasdocs.module1.Teacher","title":"<code>Teacher</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Represents a teacher in the school system.</p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the teacher.</p> <code>classes</code> <code>List[Class]</code> <p>A list of Class objects that the teacher is responsible for.</p> Note <p>This class inherits from pydantic's BaseModel for data validation.</p> Source code in <code>ragasdocs/module1.py</code> <pre><code>class Teacher(BaseModel):\n    \"\"\"\n    Represents a teacher in the school system.\n\n    Attributes:\n        name (str): The name of the teacher.\n        classes (List[Class]): A list of Class objects that the teacher is responsible for.\n\n    Note:\n        This class inherits from pydantic's BaseModel for data validation.\n    \"\"\"\n    name: str\n    classes: t.List[\"Class\"]\n</code></pre>"},{"location":"getting_started/","title":"Ragas Docs","text":""},{"location":"getting_started/#welcome-to-the-ragas-docs","title":"Welcome to the Ragas Docs!","text":"<p>This site is dedicated to providing comprehensive documentation for the Ragas project. Here, you'll find detailed information about the project, its features, and how to get the most out of it.</p> <p>Now the main object here is <code>School</code> which is a dataclass.</p> <pre><code>from ragasdocs import School\n\nschool = School()\n</code></pre> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"getting_started/#after-this-there-will-be-another-code-block","title":"After this there will be another code block","text":"CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"getting_started/joel/","title":"Joel's Markdown File","text":"<p>Welcome to Joel's Markdown file! This is where Joel can document his thoughts, ideas, and code snippets.</p> <p>Feel free to add headings, lists, code blocks, and more to organize your content effectively.</p> <p>Happy writing!</p>"},{"location":"getting_started/next_steps/","title":"Next Steps","text":""},{"location":"getting_started/next_steps/#whats-next","title":"What's Next?","text":"<p>Now that you have a basic understanding of how to use Ragas, you can start exploring more advanced features and best practices. Here are some suggestions for what to do next:</p>"}]}